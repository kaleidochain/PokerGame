{"version":3,"sources":["assets/scripts/Game/Poker.js"],"names":["Log","require","cc","Class","Component","properties","allinFrame","Node","card","blackMask","frontCard","SpriteFrame","backCard","onLoad","dealCardDuration","Trace","start","onDestroy","init","frontidx","backidx","assetMgr","find","getComponent","frontSuit","backSuit","back0","back1","back2","back3","setCardPoint","point","cards0","cards1","cards2","cards3","getCardPoint","setFaceUp","faceUp","cardface","Sprite","spriteFrame","flipCard","dstv2","scale","stopAllActions","angle","setPosition","v2","dstpos","parent","convertToNodeSpaceAR","scaleX","scaleY","opacity","backEnd","callFunc","runAction","sequence","delayTime","scaleTo","active","recoverDealCard","dstAngle","dstScale","dealCard","srcv2","srcScale","dgame","audioMgr","playDealCard","srcpos","spawn","fadeIn","rotateBy","moveTo","foldCard","srcAngle","fadeOut","disable","enable","playAllin","stopAllin"],"mappings":"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","sourceRoot":"/","sourcesContent":["var Log = require('Log');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        allinFrame: cc.Node,        //Allin动画，只有SelfHoleCard才有的效果\n        card: cc.Node,              //牌正反面\n        blackMask: cc.Node,         //弃牌灰色蒙层\n        frontCard: cc.SpriteFrame,  //牌正面\n        backCard: cc.SpriteFrame,   //牌背面\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.dealCardDuration = 0.2;\n        Log.Trace(\"Poker:onLoad\");\n    },\n\n    start () {\n\n    },\n\n    onDestroy () {\n        Log.Trace(\"Poker:onDestroy\");\n    },\n\n    //初始化使用哪套牌的正面和背面\n    init (frontidx, backidx) {\n        let assetMgr = cc.find(\"AssetMgr\").getComponent(\"AssetMgr\");\n        if (frontidx < 0 || frontidx > 3) {\n            frontidx = 0;\n        }\n        if (backidx < 0 || backidx > 3) {\n            backidx = 0;\n        }\n        this.frontSuit = frontidx;\n        this.backSuit = backidx;\n        if (this.backSuit == 0) {\n            this.backCard = assetMgr.back0;\n        } else if (this.backSuit == 1) {\n            this.backCard = assetMgr.back1;\n        } else if (this.backSuit == 2) {\n            this.backCard = assetMgr.back2;\n        } else if (this.backSuit == 3) {\n            this.backCard = assetMgr.back3;\n        }\n    },\n\n    //设置牌点\n    setCardPoint (point) {\n        Log.Trace('[setCardPoint] point: ' + point + ', frontSuit: ' + this.frontSuit);\n        this.point = point;\n        let assetMgr = cc.find(\"AssetMgr\").getComponent(\"AssetMgr\");\n        if (this.frontSuit == 0) {\n            this.frontCard = assetMgr.cards0[point];\n        } else if (this.frontSuit == 1) {\n            this.frontCard = assetMgr.cards1[point];\n        } else if (this.frontSuit == 2) {\n            this.frontCard = assetMgr.cards2[point];\n        } else if (this.frontSuit == 3) {\n            this.frontCard = assetMgr.cards3[point];\n        }\n    },\n\n    getCardPoint () {\n        return this.point;\n    },\n\n    //设置正面朝上还是背面朝上\n    setFaceUp (faceUp) {\n        let cardface = this.card.getComponent(cc.Sprite);\n        if (faceUp) {\n            cardface.spriteFrame = this.frontCard;\n        } else {\n            cardface.spriteFrame = this.backCard;\n        }\n    },\n\n    //从背面往正面翻牌，传入原始scale大小\n    flipCard (dstv2, scale) {\n        this.card.stopAllActions();\n        this.card.angle = 0;\n        this.card.setPosition(cc.v2(0, 0));\n        this.card.scale = 1;\n        let cardface = this.card.getComponent(cc.Sprite);\n        cardface.spriteFrame = this.backCard;\n        let dstpos = this.card.parent.convertToNodeSpaceAR(dstv2);\n        Log.Trace('[poker.flipCard] dstv2: ' + dstv2 + ', dstpos: ' + dstpos);\n        let scaleX = scale;\n        let scaleY = scale;\n        this.card.setPosition(dstpos);\n        this.card.opacity = 255;\n        this.card.scale = scale;\n        let backEnd = cc.callFunc(function () {\n            cardface.spriteFrame = this.frontCard;\n        }, this);\n        this.card.runAction(\n            cc.sequence(\n                cc.delayTime(0.025),\n                cc.scaleTo(this.dealCardDuration, 0.1 * scaleX, scaleY),\n                backEnd,\n                cc.scaleTo(this.dealCardDuration, scaleX, scaleY),\n            )\n        );\n        this.card.active = true;\n    },\n\n    //恢复发牌，从原始位置到终点位置，终点角度，原始scale大小和终点scale大小\n    recoverDealCard (dstv2, dstAngle, dstScale) {\n        let cardface = this.card.getComponent(cc.Sprite);\n        cardface.spriteFrame = this.backCard;\n        let dstpos = this.card.parent.convertToNodeSpaceAR(dstv2);\n        Log.Trace('[poker.recoverDealCard] dst: ' + dstpos);\n        this.card.setPosition(dstpos);\n        this.card.angle = dstAngle;\n        this.card.opacity = 255;\n        this.card.scale = dstScale;\n        this.card.active = true;\n    },\n    \n    //发牌，从原始位置到终点位置，终点角度，原始scale大小和终点scale大小\n    dealCard (srcv2, dstv2, dstAngle, srcScale, dstScale) {\n        this.card.stopAllActions();\n        this.card.angle = 0;\n        this.card.setPosition(cc.v2(0, 0));\n        this.card.scale = 1;\n        let cardface = this.card.getComponent(cc.Sprite);\n        cardface.spriteFrame = this.backCard;\n        cc.dgame.audioMgr.playDealCard();\n        let srcpos = this.card.parent.convertToNodeSpaceAR(srcv2);\n        let dstpos = this.card.parent.convertToNodeSpaceAR(dstv2);\n        Log.Trace('[poker.dealCard] src: ' + srcpos + ', dst: ' + dstpos);\n        this.card.setPosition(srcpos);\n        this.card.angle = 0;\n        this.card.opacity = 0;\n        this.card.scale = srcScale;\n        this.card.runAction(\n            cc.spawn(\n                cc.fadeIn(this.dealCardDuration),\n                cc.rotateBy(this.dealCardDuration, 360 + dstAngle),\n                cc.moveTo(this.dealCardDuration, dstpos),\n                cc.scaleTo(this.dealCardDuration, dstScale),\n            ),\n        );\n        this.card.active = true;\n    },\n\n    //弃牌，从原始位置到终点位置，原始角度，原始scale大小和终点scale大小\n    foldCard (srcv2, dstv2, srcAngle, srcScale, dstScale) {\n        this.card.stopAllActions();\n        this.card.angle = 0;\n        this.card.setPosition(cc.v2(0, 0));\n        this.card.scale = 1;\n        let cardface = this.card.getComponent(cc.Sprite);\n        cardface.spriteFrame = this.backCard;\n        let srcpos = this.card.parent.convertToNodeSpaceAR(srcv2);\n        let dstpos = this.card.parent.convertToNodeSpaceAR(dstv2);\n        this.card.setPosition(srcpos);\n        this.card.angle = srcAngle;\n        this.card.opacity = 255;\n        this.card.scale = srcScale;\n        this.card.runAction(\n            cc.spawn(\n                cc.fadeOut(this.dealCardDuration),\n                cc.moveTo(this.dealCardDuration, dstpos),\n                cc.scaleTo(this.dealCardDuration, dstScale),\n            )\n        );\n        this.card.active = true;\n    },\n\n    //牌面灰掉\n    disable () {\n        this.blackMask.active = true;\n    },\n\n    //牌面恢复\n    enable () {\n        this.blackMask.active = false;\n    },\n\n    //Allin\n    playAllin () {\n        this.allinFrame.active = true;\n    },\n\n    stopAllin () {\n        this.allinFrame.active = false;\n    },\n    // update (dt) {},\n});\n"]}