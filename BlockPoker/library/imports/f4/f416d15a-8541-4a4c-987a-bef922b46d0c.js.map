{"version":3,"sources":["assets/scripts/Net/NetControl.js"],"names":["Log","require","window","onfire","netConfig","NetControl","_sock","connect","addr","readyState","WebSocket","onopen","_onOpen","bind","onclose","_onClose","onmessage","_onMessage","console","log","fire","err","obj","send","msg","Trace","module","exports"],"mappings":";;;;;;AAAA;;;AAGA;AACA,IAAIA,GAAG,GAACC,OAAO,CAAC,KAAD,CAAf;;AACAC,MAAM,CAACC,MAAP,GAAcF,OAAO,CAAC,QAAD,CAArB,EAA2C;;AAC3C,IAAIG,SAAS,GAACH,OAAO,CAAC,WAAD,CAArB;;AACA,IAAII,UAAU,GAAC;AACXC,EAAAA,KAAK,EAAC,EADK;AACA;AACXC,EAAAA,OAAO,EAAE,iBAAUC,IAAV,EAAgB;AACrB,QAAG,KAAKF,KAAL,CAAWG,UAAX,KAAwB,CAA3B,EAA6B;AACzB;AACA;AACA,WAAKH,KAAL,GAAa,IAAII,SAAJ,CAAc,UAAUF,IAAxB,CAAb;AACA,WAAKF,KAAL,CAAWK,MAAX,GAAoB,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAApB;AACA,WAAKP,KAAL,CAAWQ,OAAX,GAAqB,KAAKC,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAArB;AACA,WAAKP,KAAL,CAAWU,SAAX,GAAuB,KAAKC,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAAvB;AACH;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACA,WAAO,IAAP;AACH,GAbU;AAeXM,EAAAA,OAAO,EAAC,mBAAU;AACdT,IAAAA,MAAM,CAACiB,IAAP,CAAY,QAAZ;AACH,GAjBU;AAkBXL,EAAAA,QAAQ,EAAC,kBAASM,GAAT,EAAa;AAClBlB,IAAAA,MAAM,CAACiB,IAAP,CAAY,SAAZ,EAAsBC,GAAtB;AACH,GApBU;AAqBXJ,EAAAA,UAAU,EAAC,oBAASK,GAAT,EAAa;AACpBnB,IAAAA,MAAM,CAACiB,IAAP,CAAY,WAAZ,EAAwBE,GAAxB;AACH,GAvBU;AAyBXC,EAAAA,IAAI,EAAC,cAASC,GAAT,EAAa;AACd,SAAKlB,KAAL,CAAWiB,IAAX,CAAgBC,GAAhB;;AACAxB,IAAAA,GAAG,CAACyB,KAAJ,CAAU,aAAWD,GAArB;AACH;AA5BU,CAAf;AAgCAE,MAAM,CAACC,OAAP,GAAetB,UAAf","sourceRoot":"/","sourcesContent":["/**\n * Created by Administrator on 2018/4/17 0017.\n */\n//定义全局的变量\nvar Log=require(\"Log\");\nwindow.onfire=require(\"onfire\");           //处理事件的类库\nvar netConfig=require('NetConfig');\nvar NetControl={\n    _sock:{},  //当前的webSocket的对象\n    connect: function (addr) {\n        if(this._sock.readyState!==1){\n            //当前接口没有打开\n            //重新连接\n            this._sock = new WebSocket(\"ws://\" + addr);\n            this._sock.onopen = this._onOpen.bind(this);\n            this._sock.onclose = this._onClose.bind(this);\n            this._sock.onmessage = this._onMessage.bind(this);\n        }\n        console.log(this._sock);\n        return this;\n    },\n\n    _onOpen:function(){\n        onfire.fire(\"onopen\");\n    },\n    _onClose:function(err){\n        onfire.fire(\"onclose\",err);\n    },\n    _onMessage:function(obj){\n        onfire.fire(\"onmessage\",obj);\n    },\n\n    send:function(msg){\n        this._sock.send(msg);\n        Log.Trace(\"send msg\"+msg);\n    },\n\n};\n\nmodule.exports=NetControl;"]}