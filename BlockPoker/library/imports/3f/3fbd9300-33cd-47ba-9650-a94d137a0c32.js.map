{"version":3,"sources":["assets/scripts/Game/GameReviewPlayerItem.js"],"names":["cc","Class","Component","properties","pokerPrefab","Prefab","myselfMark","Node","nickname","Label","avator","Sprite","RMTWinloss","RichText","RMTCardtype","holecards","RMTLayout","RMTLayer","RMTCommunityCards1","RMTCommunityCards2","RMTCommunityCards3","RMTCommunityCards4","init","playerInfo","assetMgr","find","getComponent","idx","parseInt","Addr","substr","isNaN","dgame","settings","account","toLowerCase","active","spriteFrame","heads","string","i","cardNode","instantiate","addChild","poker","HoleCards","undefined","setCardPoint","setFaceUp","RMTCommunityCards","Array","push","WinLoss","length","val","utils","formatValue","Math","abs","formatRichText","CardType","j","node","height","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        pokerPrefab: cc.Prefab,\n        myselfMark: cc.Node,\n        nickname: cc.Label,\n        avator: cc.Sprite,\n        RMTWinloss: [cc.RichText],\n        RMTCardtype: [cc.Label],\n        holecards: [cc.Node],\n        RMTLayout: cc.Node,\n        RMTLayer: [cc.Node],\n        RMTCommunityCards1: [cc.Node],\n        RMTCommunityCards2: [cc.Node],\n        RMTCommunityCards3: [cc.Node],\n        RMTCommunityCards4: [cc.Node],\n        // ...\n    },\n\n    // use this for initialization\n    init: function (playerInfo) {\n// {\n//     \"Addr\": \"0xe2A04360345EeCE3d7e781B652A998cfaaD559A8\",\n//     \"HoleCards\": [23, 51],\n//     \"RMTCommunityCards\": [\n//         [2, 41, 46, 48, 4],\n//         [28, 24, 42, 44, 17],\n//         [14, 43, 9, 0, 21],\n//         [45, 34, 5, 18, 37]\n//     ],\n//     \"CardType\": [\"One pair\", \"High card\", \"High card\", \"One pair\"],\n//     \"WinLoss\": [-100, -100, -100, 100]\n// }\n        let assetMgr = cc.find(\"AssetMgr\").getComponent(\"AssetMgr\");\n        var idx = parseInt(playerInfo.Addr.substr(2, 2), 16);\n        if (isNaN(idx)) {\n            idx = 0;\n        }\n        if (cc.dgame.settings.account.Addr.toLowerCase() == playerInfo.Addr.toLowerCase()) {\n            this.myselfMark.active = true;\n        }\n        this.avator.spriteFrame = assetMgr.heads[idx % 200];\n        this.nickname.string = playerInfo.Addr.substr(2, 8);\n        for (let i = 0; i < 2; i++) {\n            let cardNode = cc.instantiate(this.pokerPrefab);\n            this.holecards[i].addChild(cardNode);\n            let poker = cardNode.getComponent('Poker');\n            poker.init(0, 0);\n            if (playerInfo.HoleCards[i] != null && playerInfo.HoleCards[i] != undefined) {\n                poker.setCardPoint(playerInfo.HoleCards[i]);\n                poker.setFaceUp(true);\n            } else {\n                poker.setFaceUp(false);\n            }\n        }\n\n        let RMTCommunityCards = new Array();\n        RMTCommunityCards.push(this.RMTCommunityCards1);\n        RMTCommunityCards.push(this.RMTCommunityCards2);\n        RMTCommunityCards.push(this.RMTCommunityCards3);\n        RMTCommunityCards.push(this.RMTCommunityCards4);\n        for (let i = 0; i < playerInfo.WinLoss.length; i++) {\n            this.RMTLayer[i].active = true;\n            let val = cc.dgame.utils.formatValue(Math.abs(playerInfo.WinLoss[i]));\n            if (playerInfo.WinLoss[i] > 0) {\n                this.RMTWinloss[i].string = cc.dgame.utils.formatRichText('+' + val, \"#67D067\", true, false);\n            } else if (playerInfo.WinLoss[i] == 0) {\n                this.RMTWinloss[i].string = cc.dgame.utils.formatRichText(0, \"#D6D6D6\", true, false);\n            } else {\n                this.RMTWinloss[i].string = cc.dgame.utils.formatRichText('-' + val, \"#FF6E6E\", true, false);\n            }\n            this.RMTCardtype[i].string = playerInfo.CardType[i];\n            for (let j = 0; j < playerInfo.RMTCommunityCards[i].length && j < RMTCommunityCards[i].length; j++) {\n                if (playerInfo.RMTCommunityCards[i][j] != null && playerInfo.RMTCommunityCards[i][j] != undefined) {\n                    let cardNode = cc.instantiate(this.pokerPrefab);\n                    RMTCommunityCards[i][j].addChild(cardNode);\n                    let poker = cardNode.getComponent('Poker');\n                    poker.init(0, 0);\n                    poker.setCardPoint(playerInfo.RMTCommunityCards[i][j]);\n                    poker.setFaceUp(true);\n                }\n            }\n        }\n        this.node.height = this.RMTLayer[0].height * playerInfo.WinLoss.length + 14;\n    },\n\n    // called every frame\n    update: function (dt) {\n\n    },\n\n});\n"]}