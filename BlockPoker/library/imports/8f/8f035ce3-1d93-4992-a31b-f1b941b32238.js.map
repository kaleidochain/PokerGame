{"version":3,"sources":["assets/scripts/components/HeaderBar.js"],"names":["Log","require","cc","Class","Component","properties","_batteryPercentage","Label","_batteryPercentageImage","Node","onLoad","dgame","find","getComponent","_timeLabel","schedule","_updateBattery","_updateTime","headerBar","onDestroy","percentage","sys","isNative","isMobile","os","OS_IOS","jsb","reflection","callStaticMethod","OS_ANDROID","string","width","date","Date","h","getHours","m","getMinutes","s","getSeconds","start"],"mappings":";;;;;;AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AAEAC,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,kBAAkB,EAAEJ,EAAE,CAACK,KADf;AAERC,IAAAA,uBAAuB,EAAEN,EAAE,CAACO;AAFpB,GAHP;AAQL;AAEAC,EAAAA,MAVK,oBAUK;AACN,QAAI,CAACR,EAAE,CAACS,KAAR,EAAe;AACX;AACH;;AACD,SAAKL,kBAAL,GAA0BJ,EAAE,CAACU,IAAH,CAAQ,gDAAR,EAA0DC,YAA1D,CAAuEX,EAAE,CAACK,KAA1E,CAA1B;AACA,SAAKC,uBAAL,GAA+BN,EAAE,CAACU,IAAH,CAAQ,gDAAR,CAA/B;AACA,SAAKE,UAAL,GAAkBZ,EAAE,CAACU,IAAH,CAAQ,kCAAR,EAA4CC,YAA5C,CAAyDX,EAAE,CAACK,KAA5D,CAAlB;AACA,SAAKQ,QAAL,CAAc,KAAKC,cAAnB,EAAmC,EAAnC;AACA,SAAKD,QAAL,CAAc,KAAKE,WAAnB,EAAgC,CAAhC;;AACA,SAAKD,cAAL;;AACA,SAAKC,WAAL;;AACAf,IAAAA,EAAE,CAACS,KAAH,CAASO,SAAT,GAAqB,IAArB;AACH,GAtBI;AAwBLC,EAAAA,SAxBK,uBAwBQ;AACT,QAAI,CAAC,CAACjB,EAAE,CAACS,KAAT,EAAgB;AACZT,MAAAA,EAAE,CAACS,KAAH,CAASO,SAAT,GAAqB,IAArB;AACH;AACJ,GA5BI;AA8BLF,EAAAA,cA9BK,4BA8Ba;AACd,QAAII,UAAU,GAAG,GAAjB;;AACA,QAAIlB,EAAE,CAACmB,GAAH,CAAOC,QAAX,EAAqB;AACjB,UAAIpB,EAAE,CAACmB,GAAH,CAAOE,QAAX,EAAqB;AACjB,YAAIrB,EAAE,CAACmB,GAAH,CAAOG,EAAP,KAActB,EAAE,CAACmB,GAAH,CAAOI,MAAzB,EAAiC;AAC7BL,UAAAA,UAAU,GAAGM,GAAG,CAACC,UAAJ,CAAeC,gBAAf,CAAgC,eAAhC,EAAiD,sBAAjD,CAAb;AACH,SAFD,MAEO,IAAI1B,EAAE,CAACmB,GAAH,CAAOG,EAAP,KAActB,EAAE,CAACmB,GAAH,CAAOQ,UAAzB,EAAqC;AACxCT,UAAAA,UAAU,GAAGM,GAAG,CAACC,UAAJ,CAAeC,gBAAf,CAAgC,qCAAhC,EAAuE,sBAAvE,EAA+F,KAA/F,CAAb;AACH;AACJ;AACJ;;AAED,SAAKtB,kBAAL,CAAwBwB,MAAxB,GAAiCV,UAAU,GAAG,GAA9C;AACA,SAAKZ,uBAAL,CAA6BuB,KAA7B,GAAqC,KAAKX,UAAL,GAAkB,GAAvD;AACH,GA5CI;AA8CLH,EAAAA,WA9CK,yBA8CU;AACX,QAAIe,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,QAAIC,CAAC,GAAGF,IAAI,CAACG,QAAL,EAAR;AACAD,IAAAA,CAAC,GAAGA,CAAC,GAAG,EAAJ,GAAQ,MAAIA,CAAZ,GAAcA,CAAlB;AACA,QAAIE,CAAC,GAAGJ,IAAI,CAACK,UAAL,EAAR;AACAD,IAAAA,CAAC,GAAGA,CAAC,GAAG,EAAJ,GAAQ,MAAIA,CAAZ,GAAcA,CAAlB;AACA,QAAIE,CAAC,GAAGN,IAAI,CAACO,UAAL,EAAR;AACAD,IAAAA,CAAC,GAAGA,CAAC,GAAG,EAAJ,GAAQ,MAAIA,CAAZ,GAAcA,CAAlB;AACA,SAAKxB,UAAL,CAAgBgB,MAAhB,GAAyB,KAAKI,CAAL,GAAS,GAAT,GAAeE,CAAf,GAAmB,GAAnB,GAAyBE,CAAlD;AACH,GAvDI;AAyDLE,EAAAA,KAzDK,mBAyDI,CAER,CA3DI,CA6DL;;AA7DK,CAAT","sourceRoot":"/","sourcesContent":["var Log = require(\"Log\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        _batteryPercentage: cc.Label,\n        _batteryPercentageImage: cc.Node,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        if (!cc.dgame) {\n            return;\n        }\n        this._batteryPercentage = cc.find(\"Canvas/HeaderBar/BatteryArea/batteryPercentage\").getComponent(cc.Label);\n        this._batteryPercentageImage = cc.find(\"Canvas/HeaderBar/BatteryArea/power_01/power_02\");\n        this._timeLabel = cc.find(\"Canvas/HeaderBar/SignalArea/time\").getComponent(cc.Label);\n        this.schedule(this._updateBattery, 60)\n        this.schedule(this._updateTime, 1);\n        this._updateBattery();\n        this._updateTime();\n        cc.dgame.headerBar = this;\n    },\n\n    onDestroy () {\n        if (!!cc.dgame) {\n            cc.dgame.headerBar = null;\n        }\n    },\n\n    _updateBattery () {\n        let percentage = 100;\n        if (cc.sys.isNative) {\n            if (cc.sys.isMobile) {\n                if (cc.sys.os === cc.sys.OS_IOS) {\n                    percentage = jsb.reflection.callStaticMethod(\"NativeGengine\", \"getBatteryPercentage\")\n                } else if (cc.sys.os === cc.sys.OS_ANDROID) {\n                    percentage = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"getBatteryPercentage\", \"()I\");\n                }\n            }\n        }\n\n        this._batteryPercentage.string = percentage + \"%\";\n        this._batteryPercentageImage.width = 55 * percentage / 100;\n    },\n\n    _updateTime () {\n        var date = new Date();\n        var h = date.getHours();\n        h = h < 10? \"0\"+h:h;\n        var m = date.getMinutes();\n        m = m < 10? \"0\"+m:m;\n        var s = date.getSeconds();\n        s = s < 10? \"0\"+s:s;\n        this._timeLabel.string = \"\" + h + \":\" + m + \":\" + s;\n    },\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n"]}