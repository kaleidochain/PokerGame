{"version":3,"sources":["assets/scripts/Game/ClubGameTableItem.js"],"names":["Log","require","cc","Class","Component","properties","tableid","Label","blindInfo","chipsInfo","playingnum","leftTime","tokenFlag","Node","RMTFlag","INSFlag","CINSFlag","init","tableInfo","string","dgame","utils","formatClubID","settings","account","ClubID","DisplayTableId","toString","FullTableId","formatValue","SmallBlind","Straddle","Ante","BuyinMin","BuyinMax","PlayerNum","MaxNum","LeftTime","toFixed","GameLength","TableProps","active","update","dt","selectGametable","Trace","JSON","stringify","director","loadScene"],"mappings":"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","sourceRoot":"/","sourcesContent":["var Log = require(\"Log\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tableid: cc.Label,\r\n        blindInfo: cc.Label,\r\n        chipsInfo: cc.Label,\r\n        playingnum: cc.Label,\r\n        leftTime: cc.Label,\r\n        tokenFlag: cc.Node,\r\n        RMTFlag: cc.Node,\r\n        INSFlag: cc.Node,\r\n        CINSFlag: cc.Node,\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    // {'Ante':4,'BuyinMax':400,'BuyinMin':100,'CurrentStatu':0,'MaxNum':4,'MinNum':2,'PlayerNum':2,'SmallBlind':4,'Straddle':0,'TableId':1}\r\n    init: function (tableInfo) {\r\n        this.tableInfo = tableInfo;\r\n        this.tableid.string = cc.dgame.utils.formatClubID(cc.dgame.settings.account.ClubID) + \"-\";\r\n        if (tableInfo.DisplayTableId < 10) {\r\n            this.tableid.string += '00' + tableInfo.DisplayTableId.toString();\r\n        } else if (tableInfo.DisplayTableId < 100) {\r\n            this.tableid.string += '0' + tableInfo.DisplayTableId.toString();\r\n        } else {\r\n            this.tableid.string += tableInfo.DisplayTableId.toString();\r\n        }\r\n        this.tableInfo.FullTableId = this.tableid.string;\r\n        this.blindInfo.string = cc.dgame.utils.formatValue(tableInfo.SmallBlind) + \"/\" + cc.dgame.utils.formatValue(tableInfo.SmallBlind * 2).toString();\r\n        if (tableInfo.Straddle !== 0) {\r\n            this.blindInfo.string += \"/\" + cc.dgame.utils.formatValue(tableInfo.SmallBlind * 4).toString();\r\n        }\r\n        if (tableInfo.Ante > 0) {\r\n            this.blindInfo.string += \"(\" + cc.dgame.utils.formatValue(tableInfo.Ante) + \")\";\r\n        }\r\n        this.chipsInfo.string = cc.dgame.utils.formatValue(tableInfo.BuyinMin).toString() + \"/\" + cc.dgame.utils.formatValue(tableInfo.BuyinMax).toString();        this.playingnum.string = tableInfo.PlayerNum + \"/\" + tableInfo.MaxNum;\r\n        if (tableInfo.LeftTime / 3600 < 1) {\r\n            this.leftTime.string = (tableInfo.LeftTime / 60).toFixed(1) + \"m / \" + tableInfo.GameLength / 3600 + \"h\"\r\n        } else {\r\n            this.leftTime.string = (tableInfo.LeftTime / 3600).toFixed(1) + \"h / \" + tableInfo.GameLength / 3600 + \"h\"\r\n        }\r\n        if (tableInfo.TableProps & (1<<0)) {\r\n            this.tokenFlag.active = true;\r\n        }\r\n        if (tableInfo.TableProps & (1<<1)) {\r\n            this.RMTFlag.active = true;\r\n        }\r\n        if (tableInfo.TableProps & (1<<2)) {\r\n            this.INSFlag.active = true;\r\n        }\r\n        if (tableInfo.TableProps & (1<<3)) {\r\n            this.CINSFlag.active = true;\r\n        }\r\n    },\r\n\r\n    // called every frame\r\n    update: function (dt) {\r\n\r\n    },\r\n\r\n    selectGametable: function() {\r\n        Log.Trace('selectGametable' + JSON.stringify(this.tableInfo));\r\n        cc.dgame.tableInfo = this.tableInfo;\r\n        cc.director.loadScene('GameTable');\r\n    },\r\n});\r\n"]}